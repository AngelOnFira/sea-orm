name: rust-ci

on:
  pull_request:
  push:
    branches:
      - master
      - 0.2.x

env:
  CARGO_TERM_COLOR: always

jobs:
  clippy-fmt:
    name: Clippy + Fmt
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy, rustfmt
          override: true

      # Make sure files are formatted
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: >
            --all

      # Run clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets --all

  test:
    name: Unit Test
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: >
            --workspace

      # Run tests for Rocket
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: >
            --manifest-path sea-orm-rocket/Cargo.toml

      # Run tests for the CLI
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: >
            --manifest-path sea-orm-cli/Cargo.toml

  cli:
    name: CLI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: >
            --path sea-orm-cli

  examples:
    name: Examples
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        path: [basic, actix_example, actix4_example, rocket_example]
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: >
            --manifest-path examples/${{ matrix.path }}/Cargo.toml

  issues:
    name: Issues
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        path: [86]
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: >
            --manifest-path issues/${{ matrix.path }}/Cargo.toml
