name: test-sqlite

on:
  pull_request:
  push:
    branches:
      - master
      - 0.2.x

env:
  CARGO_TERM_COLOR: always

jobs:
  compile-sqlite:
    name: Compile SQLite
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        runtime: [async-std, actix, tokio]
        tls: [native-tls, rustls]
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            Cargo.lock
            target
          key: ${{ github.sha }}-${{ github.run_id }}-${{ runner.os }}-sqlite-${{ matrix.runtime }}-${{ matrix.tls }}

      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: >
            --test '*'
            --features default,sqlx-sqlite,runtime-${{ matrix.runtime }}-${{ matrix.tls }}
            --no-run

  sqlite:
    name: SQLite
    runs-on: ubuntu-20.04
    needs: compile-sqlite
    env:
      DATABASE_URL: "sqlite::memory:"
    strategy:
      matrix:
        runtime: [async-std, actix, tokio]
        tls: [native-tls, rustls]
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            Cargo.lock
            target
          key: ${{ github.sha }}-${{ github.run_id }}-${{ runner.os }}-sqlite-${{ matrix.runtime }}-${{ matrix.tls }}

      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: >
            --test '*'
            --features default,sqlx-sqlite,runtime-${{ matrix.runtime }}-${{ matrix.tls }}
